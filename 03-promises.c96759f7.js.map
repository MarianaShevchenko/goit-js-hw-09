{"mappings":"YASqB,IAAfA,EAAOC,SAASC,cAAc,SAgCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCC,YAAW,WACTJ,EAAQ,CAAEH,WAAUC,S,GACnBA,GAEHM,YAAW,WACTH,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAvCqBL,EAAzBY,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAWQ,IARY,IAApBC,EAAaf,EAAKE,cAAc,uBAChCc,EAAYhB,EAAKE,cAAc,sBAC/Be,EAAcjB,EAAKE,cAAc,wBACjCgB,EAAaC,SAASJ,EAAWK,OACjCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAG3BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAI/BpB,EAHiBoB,EAAI,EACPL,EAAaK,EAAIF,GAG5BG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE3DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAI,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAK/DL,EAAK8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n// Получаем ссылку на форму\nconst form = document.querySelector('.form');\n\n// Обработчик события отправки формы\nform.addEventListener('submit', function (event) {\n  event.preventDefault(); // Отменяем стандартное поведение формы\n\n  // Получаем значения полей формы\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  // Создаем промисы\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  // Сбрасываем значения полей формы\n  form.reset();\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","step","amount","i","then","param","console","log","concat","catch","reset"],"version":3,"file":"03-promises.c96759f7.js.map"}